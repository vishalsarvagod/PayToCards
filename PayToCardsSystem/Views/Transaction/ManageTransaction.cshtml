@using PayToCardsSystem.Models;
@*@model IEnumerable<TransactionViewModel>*@
@model TransactionSearchModel
@{
    ViewBag.Title = "ManageTransaction";
}
<script type="text/javascript">
    function HideDiv() {
        $('#filter').slideToggle();
    }
</script>
@using (Html.BeginForm("ManageTransaction", "Transaction", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form", role = "form", id = "form1" }))
{
    <div class="row" style="margin-top:25px;overflow:hidden;">
        <div class="col-lg-12">
            <div class="ibox float-e-margins" style="margin-bottom:0px;">
                <div class="ibox-title" style="height:60px;">
                    <h3 style="float:left;"><strong>Manage Transaction</strong></h3>
                </div>
            </div>
            <div class="ibox-content" style="margin-top:5px;">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="col-lg-3 text-left" style="margin-top:10px; padding-left:15px;">From Date</label>
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="col-lg-3 text-left" style="margin-top:10px; padding-left:15px;">To Date</label>
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-11">
                        <hr />
                    </div>
                    <a href="javascript:void" title="Search Filter"><i class="fa fa-chevron-down" onclick="javascript: HideDiv(true);"></i></a>
                </div>


                <div class="row" id="filter" style="display:none;">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="col-lg-6 text-left" style="margin-left:0px;">User</label>
                            <div class="col-lg-10">
                                @Html.DropDownListFor(x => x.UserValue, Model.UserList, "--Select--", new { @class = "form-control", @id = "ddUser" })
                                @Html.ValidationMessageFor(model => model.UserList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="col-lg-6 text-left" style="margin-left:0px;">Currency</label>
                            <div class="col-lg-10">
                                @Html.DropDownListFor(x => x.CurrencyValue, Model.CurrencyList, "--Select--", new { @class = "form-control", @id = "ddCurrency" })
                                @Html.ValidationMessageFor(model => model.CurrencyList, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="col-lg-6 text-left" style="margin-left:0px;">Card Number</label>
                            <div class="col-lg-10">
                                @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="col-lg-10 text-left">Transaction Amount</label>
                            <div class="col-lg-10">
                                @Html.EditorFor(model => model.TransactionAmountFrom, new { htmlAttributes = new { @class = "form-control", placeholder = "From" } })
                                @Html.ValidationMessageFor(model => model.TransactionAmountFrom, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-10">
                                @Html.EditorFor(model => model.TransactionAmountTo, new { htmlAttributes = new { @class = "form-control", @placeholder = "To" } })
                                @Html.ValidationMessageFor(model => model.TransactionAmountTo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="col-lg-6 text-left">Status</label>
                            <div class="col-sm-10">

                                @Html.EditorFor(model => model.Success)
                                <label>Success</label>

                            </div>
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Fail)
                                <label>Fail</label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        <div class="col-lg-7 col-lg-offset-4">

                            <input type="button" value="Back" onclick="BackPage();" class="btn btn-default" />
                            <script type="text/javascript">
                                function BackPage() {
                                    window.location.href = '@Url.Action("Dashboard","Dashboard")';
                                }
                            </script>
                            <button type="reset" class="btn btn-default">Reset</button>
                            @*<button type="button" name="Cancel" value="Cancel" class="btn btn-default">Cancel</button>*@
                            <button id="btnSearch" type="submit" value="Search" name="Search" class="btn btn-primary">Show Report</button>
                        </div>
                        @if (Model.ListTransactionViewModel.Count > 0)
                        {
                            <button type="button" id="downlaodExcel" title="Download Excel" class="btn btn-link" style="padding-bottom:0px; padding-left:0px; padding-right:0px; padding-top:0px;"><span class="glyphicon glyphicon-download fa-2x"></span></button>
                        }
                    </div>
                </div>
                <hr style="height:1px;border:none;color:#2c3e50;background-color:#2c3e50;" />
                @{
                    if (Model.ListTransactionViewModel.Count == 0)
                    {
                        <p class="text-primary">No record found.</p>
                    }
                    else
                    {
                        <table id="trans" class="table table-bordered table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Date</th>
                                    <th>User</th>
                                    <th>Card Number</th>
                                    <th>Amt</th>
                                    <th>Fee</th>
                                    <th>Total</th>
                                    <th>Currency</th>
                                    <th>Transaction Id</th>
                                    <th>Remarks</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.ListTransactionViewModel)
                                {
                                    var rowColor = "";
                                    if (item.Status.StartsWith("F"))
                                    {
                                        rowColor = "danger";
                                    }
                                    <tr class=@rowColor>
                                        <td></td>
                                        <td>@Html.DisplayFor(modelItem => item.TransactionDate)</td>
                                        <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.CardNumber)</td>
                                        <td>@Html.DisplayFor(modelItem => item.TransactionAmount)</td>
                                        <td>@Html.DisplayFor(modelItem => item.TransactionFee)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Total)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Currency)</td>
                                        <td>@Html.DisplayFor(modelItem => item.TransactionNo)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Remarks)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                        @*<td>@Html.DisplayFor(modelItem => item.Status)</td
                                            @{if (item.Status == "Success")
                                                {
                                                   <td>S-@Html.DisplayFor(modelItem => item.Response)</td>
                                                }
                                                else
                                                {
                                                    <td class="col-xs-1"><i class="fa fa-close text-danger"></i></td>
                                                }
                                            }>*@
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                }

            </div>
        </div>
    </div>
    <div id="load" class="loadoff">
        <div class="loader"></div>
    </div>

                    }
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <script src="~/Scripts/jquery.table2excel.js"></script>



    <script type="text/javascript">
        $(document).ready(function () {
            //  $("#filter").hide();
            var t = $("#trans").DataTable({
                //"lengthMenu": [[50, 100, 500, -1], [50, 100, 500, "All"]],
                "scrollY": "350px",
                "scrollCollapse": true,
                "paging": false,
                "columnDefs": [{
                    "searchable": false,
                    "orderable": false,
                    "targets": 0
                }],
                "order": [[1, 'desc']] //asc
            });

            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();



            $('input[type=datetime]').datepicker({
                dateFormat: "M-dd-yy",
                //dateFormat: "yy-M-dd",
                changeMonth: true,
                changeYear: true,
                yearRange: "-10:+20"
            });
            $("#btnSearch").click(function () {

                if ($("#form1").valid()) {
                    $("#load").addClass("loadon");
                }


            });
            $(window).on("load", function () {
                $("#load").addClass("loadoff");
            });
            $('.collapse').click(function () {
                //  var ibox = $(this).closest('div.ibox');
                var button = $(this).find('i');
                var content = ibox.find('#filter');
                content.slideToggle(200);
                button.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');
                ibox.toggleClass('').toggleClass('border-bottom');
                //setTimeout(function () {
                //    ibox.resize();
                //    ibox.find('[id^=map-]').resize();
                //}, 50);
            });

            $("#downlaodExcel").click(function () {
                $("#trans").table2excel({
                    // exclude CSS class
                    exclude: ".noExl",
                    name: "Worksheet Name",
                    filename: "Transaction" //do not include extension
                });
            });

        });
    </script>
}

